#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "structuri.h"

struct param_clus{
  FILE* f;
  struct pixel **m, ref, off;
  unsigned int h, w;
  double P;
  char **a;
  struct cluster* v;
  int nr;
};

int compar(struct cluster* a, struct cluster* b)
{
  return a->nr_elem - b->nr_elem;
}

void dim_clus(struct param_clus* x)
{
  int i, j, k, t = 0, c;
  struct cluster *b, *w;

  for(i = 0; i < x->h; i++)
    for(j = 0; j < x->w; j++)
      if(x->ref.R - x->off.R <= x->m[i][j].R && x->ref.R + x->off.R >= x->m[i][j].R)
        if(x->ref.G - x->off.G <= x->m[i][j].G && x->ref.G + x->off.G >= x->m[i][j].G)
          if(x->ref.B - x->off.B <= x->m[i][j].B && x->ref.B + x->off.B >= x->m[i][j].B)
            x->a[i][j] = 1;

  b = calloc(1, sizeof(struct cluster));
  x->v = malloc(sizeof(struct cluster));
  for(i = 0; i < x->h; i++)
    for(j = 0; j < x->w; j++)
    {
      if(x->a[i][j] == 1)
      {
        k = 1;
        c = 0;
        while(k <= t && c == 0)
        {
          if(i != 0 || j!= 0)
          {
            if(i != 0 && j == 0)
            {
              if(x->a[i - 1][j] == k)
                c = 1;

              else
                k++;
            }

            if(j != 0 && i == 0)
            {
              if(x->a[i][j - 1] == k)
                c = 1;

              else
                k++;
            }

            if(i != 0 && j != 0)
            {
              if(x->a[i - 1][j] == k || x->a[i][j - 1] == k)
                c = 1;

              else
                k++;
            }
          }
        }

        if(c == 1)
        {
          x->a[i][j] = k;
          b[k].nr_elem++;
          b[k].sj.x = i;
          if(j < b[k].sj.y)
            b[k].sj.y = j;

          if(j > b[k].ds.y)
            b[k].ds.y = j;

          if(i <= b[k].ds.x)
            b[k].ds.x = i;
        }

        else
        {
          t++;
          x->a[i][j] = t;
          b = realloc(b, t * sizeof(struct cluster));
          b[t].nr_elem = 1;
          b[t].sj.x = i;
          b[t].sj.y = j;
          b[t].ds.x = i;
          b[t].ds.x = j;
          b[t].ind = t;
        }
      }
    }

    for(i = 1; i <= t; i++)
      if(b[i].nr_elem >= (int)(x->h * x->w * x->P))
      {
        x->nr++;
        x->v = realloc(x->v, x->nr * sizeof(struct cluster));
        x->v[x->nr] = b[i];
      }

    for(i = 1; i <= t; i++)
      w[t] = x->v[t];

    qsort(w, t, sizeof(struct cluster), compar);

    for(i = 1; i <= t; i++)
      fprintf(x->f, "%d ", w[i].nr_elem);
}
